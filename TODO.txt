COMPLETED:
--Added ALE flux terms to flux.h
--Added variable 'vel_spts' in eles
--Added variable 'motion' in input
--Added variable 'motion' in eles
--Added method 'calc_alef_2D/3D' to flux.cpp
--Added 'vel_spts' and 'vel_fpts' to eles.h
--Added setup & initialization to 0 for vel_spts & vel_fpts
----eles::initialize_grid_velo
----called from geometry.cpp
--Added function 'get_pos_spt' in eles.cpp
--Added 'mesh_deform.cpp' - wrapper file for mesh deformation
----Function mesh::deform(_mesh): wrapper method
----Function to build stiffness matrix for a single class of eles (tris, quads)
------Loop over each element type & build matrix for those elements
----Working on assembling global stiffness matrix from individual elements

--Created "mesh" class and relocated stiffness matrix routines to it
--Added 'mesh Mesh' to HiFiLES.cpp; gets passed to GeoPreProcess

################################################################################################

TODO (Short Term):
--Method to interpolate velocity at shape points to velocity at flux points
----set_opp_vf currently - need a 1D interp function for do spt -> gauss (flux) pts
----**eval_nodal_s_basis???**
----** SEE set_tloc_fpts **
----For 2nd-order and higher elements, need to re-implement the loc_spts
    functions, since non-corner spts not neccessarily evenly spaced on faces
    (in (r,s,t) coordinates)
--Finish this todo list
--Organize the use of "Mesh" variable within GeoPreProcess (and eliminate redundant variables)

TODO (Med Term):
--Implement mesh deformation (linear elasticity) for just triangles
--Create structure to call deformation script every xx iterations & update
  mesh info - Jacobian, anything else?  'Opp_x' matrices?
--Modify boundary conditions

TODO (Long Term):
--Implement mesh deformation for ALL 2D elements
----Will it possibly involve converting quads to tris?
--Implement mesh deformation for 3D

################################################################################################

SU2 Mesh Deformation Notes
--trunk/common/src/grid_movement_structure.cpp
----SetFEA_StiffMatrix2D   (Setup matrix for linear system)
----SetVolume_Deformation  (Solve the linear system and update grid)

################################################################################################

THOUGHTS
--In CompConnectivity(...) and such, replace the gigantic list of things passed in & out with
  just '&Mesh'?  For applicable variables (most of them).
--How much more (than I currently expect) will need to be stored in 'Mesh' to update all the
  metric information which is normally setup just once?  Might as well just store ALL mesh /
  connectivity info in Mesh? (and remove applicable duplicates from geo.cpp?)
